version: 2.1

jobs:
  test:
    working_directory: ~/repo
    docker:
    - image: cimg/node:20.5.1
    steps:
      - checkout # git clone del codigo
      - restore_cache: # cunado se ejecuta el restore busca la cache si se ha cambiado la primera vez falla
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install
      - run:
          name: Run lint
          command: npm run lint:report
      - run:
          name: Run tests
          command: npm run test:coverage      
      - store_test_results:
          path: test-results.xml

      - save_cache: 
          paths:
            - node_modules # Guarda esta carpeta
          key: v1-dependencies-{{ checksum "package.json" }} # v1-depe y el checksum -> identificador de un fichero. cuando cambia "package,json" la cache queda invalidada
      - persist_to_workspace: # Guardar los datos
          root: ~/repo
          paths: .

  deploy:
    working_directory: ~/repo
    docker:
    - image: cimg/node:20.5.1
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/repo/.npmrc
      - run:
          name: Pack package
          command: npm pack
      - run:
          name: Publish package
          command: npm publish --dry run
      - store_artifacts:
          path: ~/repo/my-awesome-package-1.1.0.tgz
          destination: package/release.tgz
      - store_artifacts:
          path: ~/repo/dist
          destination: dist
      - store_artifacts:
          path: ~/repo/docs
          destination: docs

workflows:
  test-deploy:
    jobs:
      - test
      - deploy:
          context: dev
          requires:
            - test
